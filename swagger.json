{
  "openapi": "3.0.0",
  "info": {
    "title": "My Todo API",
    "version": "1.0.0",
    "description": "Docs for Auth & Todos endpoints"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserSignup" }
            }
          }
        },
        "responses": {
          "201": { "description": "User created" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login existing user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserLogin" }
            }
          }
        },
        "responses": {
          "200": { "description": "Logged in" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/api/todos": {
      "get": {
        "tags": ["Todos"],
        "summary": "Get all todos",
        "responses": {
          "200": {
            "description": "List of todos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Todo" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Todos"],
        "summary": "Create a new todo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TodoInput" }
            }
          }
        },
        "responses": {
          "201": { "description": "Todo created" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/todos/{id}": {
      "put": {
        "tags": ["Todos"],
        "summary": "Update a todo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TodoInput" }
            }
          }
        },
        "responses": { "200": { "description": "Todo updated" } }
      },
      "delete": {
        "tags": ["Todos"],
        "summary": "Delete a todo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "Deleted" } }
      }
    }
  },
  "components": {
    "schemas": {
      "UserSignup": {
        "type": "object",
        "required": ["name","email", "password"],
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "minLength": 6 }
        }
      },
      "UserLogin": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string" }
        }
      },
      "Todo": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "title": { "type": "string" },
          "status": { "type": "string", "enum": ["completed", "pending"] },
          "priority": { "type": "string", "enum": ["high", "mid", "low"] },
          "owner": {
            "type": "string",
            "description": "User ObjectId who owns this todo"
          }
        }
      },
      "TodoInput": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": { "type": "string" },
          "status": { "type": "string", "enum": ["completed", "pending"] },
          "priority": { "type": "string", "enum": ["high", "mid", "low"] }
        }
      }
    }
  }
}
